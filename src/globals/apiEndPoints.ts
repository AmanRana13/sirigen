/* eslint-disable max-len */
import {IThresholdEndPoints} from './apiEndPoints.types';

export const END_POINTS_MODULES = Object.freeze({
  SUPERVISION: 'supervision',
  COGNITO_USER: 'cognito/user',
  CARE_INSIGHTS: 'careinsights',
  MEASUREMENT: 'measurement',
  COGNITO: 'cognito',
  PUSHER: '/pusher',
  USER: 'users',
});

const BASE_USER_QUERY = `${END_POINTS_MODULES.USER}/query`;
const BASE_ADD_USER = `${END_POINTS_MODULES.USER}/add_user`;
const BASE_SENIOR_END_POINT = `${END_POINTS_MODULES.USER}/senior`;
const BASE_PROVIDER_END_POINT = `${END_POINTS_MODULES.USER}/provider`;
const BASE_CONFIG_END_POINT = `${END_POINTS_MODULES.USER}/public-information`;

const BASE_WELLNESS_SURVEY_END_POINT = `${END_POINTS_MODULES.SUPERVISION}/wellness-survey`;
const BASE_WELLNESS_PLAN_END_POINT = `${END_POINTS_MODULES.SUPERVISION}/wellness-plan`;
const BASE_SLEEP_END_POINT = `${END_POINTS_MODULES.MEASUREMENT}/sleep`;
const BASE_ALARM_END_POINT = `${END_POINTS_MODULES.MEASUREMENT}/alarm`;
const BASE_VITALS_END_POINT = `${END_POINTS_MODULES.MEASUREMENT}/vitals`;
const BASE_HOLISTIC_ASSESSMENT_END_POINT = `${END_POINTS_MODULES.SUPERVISION}/holistic-assessment`;
const BASE_CAREGIVER_STRAIN_ASSESSMENT_END_POINT = `${END_POINTS_MODULES.SUPERVISION}/caregiver-strain-assessment`;
const BASE_LAWTON_BRODY_ADL_ASSESSMENT_END_POINT = `${END_POINTS_MODULES.SUPERVISION}/adl-brody-assessment`;
const BASE_KATZ_ADL_ASSESSMENT_END_POINT = `${END_POINTS_MODULES.SUPERVISION}/adl-katz-assessment`;
const BASE_HOLISTIC_ASSESSMENT_ADMIN_END_POINT = `${END_POINTS_MODULES.SUPERVISION}/holistic-assessment-form-admin`;

export const WELLNESS_SURVEY_END_POINTS = Object.freeze({
  FETCH: `${BASE_WELLNESS_SURVEY_END_POINT}/fetch`,
  POST: `${BASE_WELLNESS_SURVEY_END_POINT}`,
});

export const USER_END_POINTS = Object.freeze({
  IS_EMAIL_MAPPED: `${END_POINTS_MODULES.COGNITO_USER}/is-email-mapped`,
  IS_MOBILE_MAPPED: `${END_POINTS_MODULES.COGNITO_USER}/is-mobile-mapped`,
});

export const THRESHOLD_END_POINTS: IThresholdEndPoints = Object.freeze({
  GET_VITALS: `${END_POINTS_MODULES.CARE_INSIGHTS}/fetch-vitals`,
  UPDATE_VITAL_STATE: `${END_POINTS_MODULES.CARE_INSIGHTS}/update_state`,
  UPDATE_THRESHOLD_CONFIG: `${END_POINTS_MODULES.CARE_INSIGHTS}/update_threshold`,
  DOWNLOAD_DETAILED_DATA: `${END_POINTS_MODULES.CARE_INSIGHTS}/summary-report`,
  MEASUREMENT: END_POINTS_MODULES.MEASUREMENT,
  GET_THRESHOLD: `${END_POINTS_MODULES.CARE_INSIGHTS}/get-threshold`,
});

export const CARE_INSIGHT_END_POINTS = Object.freeze({
  GET_CARE_INSIGHT_HISTORY: `${END_POINTS_MODULES.CARE_INSIGHTS}/care-insight`,
  GET_CARE_INSIGHT_TRANSACTION: `${END_POINTS_MODULES.CARE_INSIGHTS}/insight-history`,
  POST_CARE_INSIGHT_SUMMARY: `${END_POINTS_MODULES.CARE_INSIGHTS}/summary-recap`,
  UPDATE_CARE_INSIGHT_STATUS: `${END_POINTS_MODULES.CARE_INSIGHTS}/insight-status`,
  GET_ALL_CARE_INSIGHT: `${END_POINTS_MODULES.CARE_INSIGHTS}/all-care-insight`,
  POST_CARE_INSIGHT_ALERT: `${END_POINTS_MODULES.CARE_INSIGHTS}/action-update`,
  GET_CI_RANGE_MILESTONES: `${END_POINTS_MODULES.CARE_INSIGHTS}/get-ci-range-milestone`,
});

export const PUSHER_END_POINTS = Object.freeze({
  AUTH: `${END_POINTS_MODULES.COGNITO}${END_POINTS_MODULES.PUSHER}/auth`,
});

export const SLEEP_END_POINTS = Object.freeze({
  GET_SLEEP_DAILY: `${BASE_SLEEP_END_POINT}/sleep-daily`,
  GET_SLEEP_HEART_RATE: `${BASE_SLEEP_END_POINT}/sleep-hr`,
  GET_SLEEP_PHASE: `${BASE_SLEEP_END_POINT}/sleep-phase`,
  GET_SLEEP_DEPTH: `${BASE_SLEEP_END_POINT}/sleep-depth`,
});

export const LOCATION_END_POINTS = Object.freeze({
  GET_LOCATION: `${BASE_ALARM_END_POINT}/location`,
  GET_ENABLE_DATES: `${BASE_ALARM_END_POINT}/get-location-dates`,
  POST_LOCATION: `${BASE_SENIOR_END_POINT}/locate-me`,
});

export const USER_SERVICE_ENDPOINTS = Object.freeze({
  GET_CARE_AGENT: `${BASE_USER_QUERY}/careagent-list`,
  ADD_CARE_AGENT: `${BASE_ADD_USER}/minimal-info`,
  DISABLE_CARE_AGENT: `${END_POINTS_MODULES.USER}/toggle_user_state`,
  RESEND_OTP: `${END_POINTS_MODULES.COGNITO}/resent_otp`,
  FORGOT_PASSWORD: `${END_POINTS_MODULES.COGNITO}/forgot_password`,
  RESET_PASSWORD: `${END_POINTS_MODULES.COGNITO}/authentication/reset-password`,
  VALIDATE_PASSWORD: `${END_POINTS_MODULES.COGNITO}/authentication/password-validate`,
  CHANGE_PASSWORD: `${END_POINTS_MODULES.COGNITO}/authentication/change-password`,
  GET_USER_MAPPING: `${BASE_USER_QUERY}/user-info`,
});

export const SENIOR_SERVICE_END_POINTS = Object.freeze({
  GET_CARE_GIVER: `${BASE_SENIOR_END_POINT}/care-circle`,
  GET_MINIMAL_INFO: `${BASE_SENIOR_END_POINT}/minimal-info`,
  GET_BASIC_INFO: `${BASE_SENIOR_END_POINT}/basic-info`,
  GET_DOCTOR_INFO: `${BASE_PROVIDER_END_POINT}/doctor`,
  GET_DENTIST_INFO: `${BASE_PROVIDER_END_POINT}/dentist`,
  GET_PHARMACY_INFO: `${BASE_PROVIDER_END_POINT}/pharmacy`,
  GET_SENIOR_LIST: `${BASE_SENIOR_END_POINT}/list`,
  GET_MULTIPLE_IMAGES: `${BASE_SENIOR_END_POINT}/multiple-images`,
  GET_SENIOR_MAPPING: `${BASE_USER_QUERY}/senior-info`,
  POST_MINIMAL_INFO: `${BASE_SENIOR_END_POINT}/minimal-info`,
});

export const WELLESS_PLAN_END_POINTS = Object.freeze({
  GET_WELLNESS_PLAN: `${BASE_WELLNESS_PLAN_END_POINT}/fetch`,
  UPDATE_WELLNESS_PLAN: `${BASE_WELLNESS_PLAN_END_POINT}`,
});

export const HOLISTIC_ASSESSMENT_END_POINTS = Object.freeze({
  GET_HOLISTIC_ASSESSMENT: `${BASE_HOLISTIC_ASSESSMENT_END_POINT}`,
  POST_HOLISTIC_ASSESSMENT: `${BASE_HOLISTIC_ASSESSMENT_END_POINT}/add`,
  GET_BLANK_HOLISTIC_ASSESSMENT: `${END_POINTS_MODULES.SUPERVISION}/holistic-assessment-form`,
  GET_HISTORY: `${END_POINTS_MODULES.SUPERVISION}/holistic-assessment-history`,
  GET_HOLISTIC_ASSESSMENT_ADMIN: `${BASE_HOLISTIC_ASSESSMENT_ADMIN_END_POINT}/get`,
  POST_HOLISTIC_ASSESSMENT_ADMIN: `${BASE_HOLISTIC_ASSESSMENT_ADMIN_END_POINT}/add`,
  GET_HOLISTIC_ASSESSMENT_HISTORY_ADMIN: `${BASE_HOLISTIC_ASSESSMENT_ADMIN_END_POINT}/history`,
});
export const CAREGIVER_STRAIN_ASSESSMENT_END_POINTS = Object.freeze({
  GET_CAREGIVER_STRAIN_ASSESSMENT: `${BASE_CAREGIVER_STRAIN_ASSESSMENT_END_POINT}/get`,
  POST_CAREGIVER_STRAIN_ASSESSMENT: `${BASE_CAREGIVER_STRAIN_ASSESSMENT_END_POINT}/add`,
  GET_BLANK_CAREGIVER_STRAIN_ASSESSMENT: `${BASE_CAREGIVER_STRAIN_ASSESSMENT_END_POINT}/form`,
  GET_HISTORY: `${BASE_CAREGIVER_STRAIN_ASSESSMENT_END_POINT}/history`,
});

export const LAWTON_BRODY_ADL_ASSESSMENT_END_POINTS = Object.freeze({
  GET_LAWTON_BRODY_ADL_ASSESSMENT: `${BASE_LAWTON_BRODY_ADL_ASSESSMENT_END_POINT}/get`,
  POST_LAWTON_BRODY_ADL_ASSESSMENT: `${BASE_LAWTON_BRODY_ADL_ASSESSMENT_END_POINT}/add`,
  GET_BLANK_LAWTON_BRODY_ADL_ASSESSMENT: `${BASE_LAWTON_BRODY_ADL_ASSESSMENT_END_POINT}/form`,
  GET_LAWTON_BRODY_HISTORY: `${BASE_LAWTON_BRODY_ADL_ASSESSMENT_END_POINT}/history`,
});

export const KATZ_ADL_ASSESSMENT_END_POINTS = Object.freeze({
  GET_KATZ_ADL_ASSESSMENT: `${BASE_KATZ_ADL_ASSESSMENT_END_POINT}/get`,
  POST_KATZ_ADL_ASSESSMENT: `${BASE_KATZ_ADL_ASSESSMENT_END_POINT}/add`,
  GET_BLANK_KATZ_ADL_ASSESSMENT: `${BASE_KATZ_ADL_ASSESSMENT_END_POINT}/form`,
  GET_KATZ_HISTORY: `${BASE_KATZ_ADL_ASSESSMENT_END_POINT}/history`,
});
export const MEDICAL_CONDITION_END_POINTS = Object.freeze({
  GET_MEDICAL_CONDITION: `${END_POINTS_MODULES.USER}/medical-condition`,
  POST_MEDICAL_CONDITION: `${END_POINTS_MODULES.USER}/medical-condition`,
  GET_MEDICAL_CONDITION_HISTORY: `${END_POINTS_MODULES.USER}/medical-condition-history`,
  SEARCH_MEDICAL_CONDITION: `${END_POINTS_MODULES.USER}/get-medical-condition`,
});
export const MEDICATION_LIST_END_POINTS = Object.freeze({
  MEDICATION_LIST: `${END_POINTS_MODULES.USER}/user-medication`,
  SEARCH_MEDICATION: `${END_POINTS_MODULES.USER}/get-medication`,
});

export const CORPORATE_MANAGEMENT_END_POINTS = Object.freeze({
  POST_CORPORATE: `${END_POINTS_MODULES.USER}/corporation`,
  GET_CORPORATE_LIST: `${END_POINTS_MODULES.USER}/list-corporation`,
  SEARCH_CORPORATE: `${END_POINTS_MODULES.USER}/get-corporate-management`,
  ADD_CORPORATE: `${END_POINTS_MODULES.USER}/add-corporate`,
  DISABLE_CORPORATE: `${END_POINTS_MODULES.USER}/disable-corporate`,
  VALIDATE_DUPLICATE_DATA: `${END_POINTS_MODULES.USER}/validate-field`,
});

export const FACILITY_MANAGEMENT_END_POINTS = Object.freeze({
  GET_FACILITY_LIST: `${END_POINTS_MODULES.USER}/list-facility`,
  POST_FACILITY: `${END_POINTS_MODULES.USER}/facility`,
  SEARCH_FACILITY: `${END_POINTS_MODULES.USER}/get-facility-management`,
  ADD_FACILITY: `${END_POINTS_MODULES.USER}/add-facility`,
  DISABLE_FACILITY: `${END_POINTS_MODULES.USER}/facility`,
  VALIDATE_DUPLICATE: `${END_POINTS_MODULES.USER}/validate-facility-field`,
});

export const GOALS_END_POINTS = Object.freeze({
  GET_GOALS_DATA: `${END_POINTS_MODULES.SUPERVISION}/goal-action-data/fetch`,
  POST_GOALS_DATA: `${END_POINTS_MODULES.SUPERVISION}/goal-action-data`,
  GET_GOALS_ACTION_MAP_DATA: `${END_POINTS_MODULES.SUPERVISION}/goal-action/fetch`,
});

export const ALARM_END_POINTS = Object.freeze({
  GET_ALARMS: `${BASE_ALARM_END_POINT}/get-alarms`,
  UPDATE_ALARMS: `${BASE_ALARM_END_POINT}/update-alarm-status`,
  GET_SOS: `${BASE_ALARM_END_POINT}/sos`,
  GET_FALL_DETECTION: `${BASE_ALARM_END_POINT}/fall-detect`,
});

export const DEVICES_END_POINTS = Object.freeze({
  GET_DEVICES: `${END_POINTS_MODULES.USER}/medical-device`,
  GET_DEVICES_INFORMATION: `${END_POINTS_MODULES.USER}/get-device-info`,
});

const resourceUrl = `${END_POINTS_MODULES.SUPERVISION}/resource`;
export const RESOURCES_END_POINTS = Object.freeze({
  GET_SIGNED_URL: resourceUrl,
  DELETE_FILES_URL: resourceUrl,
  POST_SIGNED_URL: resourceUrl,
});

export const CONFIG_END_POINTS = Object.freeze({
  GET_CONFIG_DATA: `${BASE_CONFIG_END_POINT}/message`,
  GET_SECRET_DATA: `${END_POINTS_MODULES.COGNITO}/client-configuration`,
});

export const SENIOR_COACH_MAPPING_ENDPOINTS = Object.freeze({
  POST_ASSIGN: `${END_POINTS_MODULES.USER}/senior-coach-map`,
  DELETE_UNASSIGN: `${END_POINTS_MODULES.USER}/senior-coach-map`,
});

export const ASSESSMENT_TAGS_ENDPOINTS = Object.freeze({
  GET_SUPERVISION_ASSESSMENT_TAGS: `${END_POINTS_MODULES.SUPERVISION}/assessment-tags`,
  GET_USER_ASSESSMENT_TAGS: `${END_POINTS_MODULES.USER}/assessment-tags`,
});

export const ACTIVITY_GOAL_ENDPOINTS = Object.freeze({
  GET_ACTIVITY_GOAL: `${BASE_VITALS_END_POINT}/activity-goal`,
  POST_ACTIVITY_GOAL: `${BASE_VITALS_END_POINT}/activity-goal`,
});

export const PUBLIC_APIS = Object.freeze({
  LOGIN: `${END_POINTS_MODULES.COGNITO}/authentication/login`,
  FORGOT_PASSWORD: USER_SERVICE_ENDPOINTS.FORGOT_PASSWORD,
  VALIDATE_PASSWORD: USER_SERVICE_ENDPOINTS.VALIDATE_PASSWORD,
  CHANGE_PASSWORD: USER_SERVICE_ENDPOINTS.CHANGE_PASSWORD,
  RESET_PASSWORD: USER_SERVICE_ENDPOINTS.RESET_PASSWORD,
})
