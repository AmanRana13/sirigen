export const seniorCallScheduleTableMockData = {
    callList: [],
    computedMatch: {
      isExact: true,
      params: {},
      path: '/call-schedule',
      url: '/call-schedule',
    },
    disableRowClick: true,
    exact: true,
    getCallScheduleList: jest.fn(),
    history: [],
    isLoading: false,
    listAll: true,
    location: {
      hash: '',
      key: 'k74wjq',
      pathname: '/call-schedule',
      search: '',
      state: undefined,
    },
    markCompleteCall:jest.fn().mockImplementationOnce(() => Promise.resolve()),
    match: {
      isExact: true,
      params: {},
      path: '/call-schedule',
      url: '/call-schedule',
    },
    meta: {
      description: '',
      title: 'Call Schedule',
    },
    noHeader: true,
    noRecord: false,
    path: '/call-schedule',
    rowData: [
      {
        account_id: '7bbdfa11d55741a98d0769e3444578d5',
        call_direction: 'outbound',
        call_id: 'a1dd8465bdd64ebf82fbc84587258bb6',
        call_priority: 'High',
        call_reason: 'testt',
        call_status: 'pending',
        call_time: null,
        call_time_zone: null,
        call_type: 'Billing/Payment',
        callee_id: 'caregiver-ad6b8ea3db6d4ffe8518a8f399bf11fc',
        callee_last_call_time: null,
        callee_name: 'jok',
        callee_type: 'caregiver',
        careagent_id: 'admin-46ed20369e5d4231a38c0f967bba0b13',
        careagent_name: 'Admin',
        created_date: '2022-06-27T11:49:30.952887+00:00',
        disposition: null,
        duration: 15,
        gender: 'Male',
        location: {
          city: 'test',
          coordinates: {
            latitude: null,
            longitude: null,
          },
          radius: {
            radius_measurement: null,
            value: null,
          },
          state: 'NY',
          street: 'Test',
          timezone: 'America/New_York',
          zipcode: '10001',
        },
        mobile_number: '3222323332',
        modification_date: '2022-07-04T11:58:30.559755+00:00',
        senior_id: 'senior-3cd7df6463784d8e9c28f618a18a459c',
        start_time: '2022-06-27T18:30:00+05:30',
        start_time_zone: '+05:30',
      },
    ],
    setRefreshState: jest.fn(),
    staticContext: undefined,
    updateCallStatus: jest.fn().mockImplementationOnce(() => Promise.resolve()),
  };